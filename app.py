import streamlit as st
import pandas as pd
from streamlit_option_menu import option_menu

# Configuration de la page
st.set_page_config(
    page_title="Veille IA",
    page_icon="ü§ñ",
    layout="wide"
)

# Lecture du fichier CSV des utilisateurs
@st.cache_data
def load_users():
    df = pd.read_csv('users.csv')
    # Conversion du dataframe en dictionnaire simple
    users_dict = {}
    
    for _, row in df.iterrows():
        username = row['name']
        users_dict[username] = {
            'password': row['password'],
            'email': row['email'],
            'role': row['role']
        }
    
    return users_dict

# Chargement des donn√©es utilisateurs
user_accounts = load_users()

# Fonction pour afficher la veille technologique IA
def show_ai_news():
    st.title("Veille Technologique : Derni√®res Avanc√©es en IA ü§ñ")
    st.write("D√©couvrez les trois innovations r√©centes les plus marquantes dans le domaine de l'intelligence artificielle.")
    
    # Cr√©ation de 3 colonnes pour afficher les innovations
    col1, col2, col3 = st.columns(3)
    
    # Premi√®re innovation
    with col1:
        st.subheader("Mod√®les Multimodaux")
        st.markdown("![Mod√®les Multimodaux](https://placehold.co/400x250/1E88E5/FFFFFF?text=Modeles+Multimodaux)")
        st.write("""
        Les mod√®les multimodaux comme GPT-4V, Claude 3 et Gemini peuvent d√©sormais traiter 
        simultan√©ment texte, images, et dans certains cas audio et vid√©o. 
        Ces mod√®les permettent des interactions plus naturelles et compl√®tes 
        avec l'IA, ouvrant la voie √† de nouvelles applications comme 
        l'analyse d'images m√©dicales avec contexte textuel ou la cr√©ation 
        de contenu cross-m√©dia.
        """)
    
    # Deuxi√®me innovation
    with col2:
        st.subheader("Agents IA Autonomes")
        st.markdown("![Agents IA](https://placehold.co/400x250/4CAF50/FFFFFF?text=Agents+IA+Autonomes)")
        st.write("""
        Les agents IA autonomes comme AutoGPT peuvent d√©sormais planifier et 
        ex√©cuter des s√©quences complexes de t√¢ches avec peu d'intervention humaine. 
        Ces agents utilisent des LLMs pour d√©composer les objectifs en sous-t√¢ches, 
        les ex√©cuter et s'auto-corriger. Ils peuvent naviguer sur le web, 
        utiliser des outils et m√™me √©crire et ex√©cuter du code pour atteindre leurs objectifs.
        """)
    
    # Troisi√®me innovation
    with col3:
        st.subheader("IA G√©n√©rative Locale")
        st.markdown("![IA Locale](https://placehold.co/400x250/FF9800/FFFFFF?text=IA+Generative+Locale)")
        st.write("""
        Des mod√®les comme Llama 3, Mistral et Claude Haiku peuvent maintenant 
        fonctionner directement sur les appareils des utilisateurs. 
        Ces mod√®les optimis√©s offrent un bon √©quilibre entre performance 
        et taille, permettant des applications qui respectent la vie priv√©e
        et fonctionnent sans connexion internet. Cette avanc√©e d√©mocratise 
        l'acc√®s √† l'IA g√©n√©rative tout en r√©duisant les co√ªts d'infrastructure.
        """)

# Fonction pour la page d'accueil
def show_home():
    st.title("Bienvenue sur notre Veille Technologique IA! üëã")
    st.write("""
    Cette application vous permet de d√©couvrir les derni√®res avanc√©es dans le domaine de l'intelligence artificielle.
    Utilisez le menu situ√© dans la barre lat√©rale pour naviguer entre les diff√©rentes pages.
    """)
    
    st.info("Cette application a √©t√© cr√©√©e dans le cadre d'un challenge Streamlit.")

# Initialisation des √©tats de session
if "authentication_status" not in st.session_state:
    st.session_state["authentication_status"] = None
if "username" not in st.session_state:
    st.session_state["username"] = None

# Interface de connexion
if st.session_state["authentication_status"] is not True:
    st.title("Connexion")
    
    # Cr√©er des colonnes pour centrer le formulaire
    col1, col2, col3 = st.columns([1, 2, 1])
    
    with col2:
        username = st.text_input("Nom d'utilisateur")
        password = st.text_input("Mot de passe", type="password")
        
        if st.button("Se connecter"):
            if username in user_accounts:
                if password == user_accounts[username]["password"]:
                    st.session_state["authentication_status"] = True
                    st.session_state["username"] = username
                    st.rerun()
                else:
                    st.session_state["authentication_status"] = False
                    st.error("Mot de passe incorrect")
            else:
                st.session_state["authentication_status"] = False
                st.error("Utilisateur inconnu")

# V√©rification du statut d'authentification
if st.session_state["authentication_status"]:
    # Si l'utilisateur est connect√©, afficher le contenu
    with st.sidebar:
        st.write(f"Bienvenue {st.session_state['username']} üëã")
        
        # Menu de navigation dans la sidebar
        selection = option_menu(
            menu_title=None,
            options=["Accueil", "Veille IA"],
            icons=["house", "robot"],
            menu_icon="cast",
            default_index=0,
        )
        
        # Bouton de d√©connexion
        if st.button("D√©connexion"):
            st.session_state["authentication_status"] = None
            st.session_state["username"] = None
            st.rerun()
    
    # Affichage du contenu en fonction de la s√©lection
    if selection == "Accueil":
        show_home()
    elif selection == "Veille IA":
        show_ai_news()

elif st.session_state["authentication_status"] is False:
    st.error("L'username ou le password est incorrect")
